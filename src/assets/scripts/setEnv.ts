/* eslint-disable @typescript-eslint/no-var-requires */
/* tslint:disable */
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck

const { writeFile, existsSync, mkdirSync } = require("fs");
const { argv } = require("yargs");

const { environment } = argv;
const isProduction = environment === "prod";

require("dotenv").config({
  path: `./${isProduction ? ".env" : ".env.development"}`,
});

const envDirectory = "./src/environments";
const prodEnv = "environment.prod.ts";
const devEnv = "environment.ts";

function writeFileUsingFs(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== "") {
      console.log(`Wrote variables to ${targetPath}`);
    }
  });
}

// create environment directory if it does not exist

if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}

// create environment files f they don't exist
writeFileUsingFs(`${envDirectory}/${prodEnv}`, "");
writeFileUsingFs(`${envDirectory}/${devEnv}`, "");

// Dynamically compiling environment files

const targetPath = isProduction
  ? `${envDirectory}/${prodEnv}`
  : `${envDirectory}/${devEnv}`;

const environmentFileContent = `
  //File autogenerated by running src/assets/scripts/setEnv.ts

  export const environment = {
    DB_USER: "${process.env.DB_USER}",
    DB_PWD: "${process.env.DB_PWD}",
    DB_NAME: "${process.env.DB_NAME}",
    DB_HOST: "${process.env.DB_HOST}",
    DB_PORT: "${process.env.DB_PORT}",
    production: ${isProduction}
  };
`;

// appending data into the target file
writeFileUsingFs(targetPath, environmentFileContent);

/* tslint:enable */
